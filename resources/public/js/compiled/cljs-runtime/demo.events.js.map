{"version":3,"sources":["demo/events.cljs"],"mappings":";AASA,yDAAA,zDAACA,oJAEA,EAAA,AAAAC,iDAAA,WAAYO,EAAEA;AAAd,AAAA,IAAAN,6BAAA;AAAA,AAAA,IAAA,AAAA,AAAAC,gDAAA,AAAA;;AAAA,IAAAC,wBACEK;AADF,AAAA,AAAAJ,iDAAA,2CAAA,8DAAA,EAAA,qEAAA,IAAA,yDAAAD,sBAAA,sDAAA,AAAA,yEAAA,qEAAA;;AAAAA;gBAAA,IAAAE,IAAAC;AAAA,AAAA,MAAAD;IAAA,WAAYE,EAAEA;AAAd,AACEC;;AAEH,sBAAA,tBAAMC;AAAN,mDACM,AAAA,AAAIC,AACJ,2BAAA,9EACA,mFAAA,5EAACC;;AAEP,yDAAA,zDAACZ,8JAEA,WAAKa,GAAGL;AAAR,AACE,wDAAA,jDAACM,8CAAMD,0DAAW,mHAAA,2CAAA,iEAAA,WAAAE,1OAACC,qBAAU,CAAA,2EAAA,vBAAa,AAACN;AAAzB,AACyB,8BAAA,mFAAA,8FAAAK,xMAACE;GAD1B,4DAAA;AAAA,AAEsB,8BAAA,mFAAA,1GAACA;;;AAC5C,yDAAA,zDAACjB,4IAEA,WAAKa,GAAGL;AAAR,AACE,wDAAA,4DAAA,7GAACM,8CAAMD;;AAEV,yDAAA,zDAACb,uJAEA,cAAAkB,HAAKL;AAAL,AAAA,IAAAM,aAAAD;QAAA,AAAAN,4CAAAO,WAAA,IAAA,/DAASX;UAAT,AAAAI,4CAAAO,WAAA,IAAA,jEAAWC;AAAX,AACC,IAAMC,MAAI,AAACC,sDAAwB,AAAQF;AAA3C,AACE,oBAAI,AAAA,wFAASC;AACT,wDAAA,jDAACP,8CAAMD,uEAAgBQ;;iMACnBR,9CACD,iDAAA,jDAACC,0GAAc,kDAAA,LAAKO,tMACpB,gOAAA,hOAACE,/CACD,uUAAA,vUAACA,rDACD,icAAA,4DAAA,tfAACT;;;AAEZ,yDAAA,zDAACd,kJAEA,cAAAwB,HAAKX;AAAL,AAAA,IAAAY,aAAAD;QAAA,AAAAZ,4CAAAa,WAAA,IAAA,/DAASjB;UAAT,AAAAI,4CAAAa,WAAA,IAAA,jEAAWJ;AAAX,AACE,wDAAA,jDAACP,8CAAMD,wDAAS,AAACa,eAAK,2BAAA,3BAAQ,AAAA,AAAIf;;AAErC,yDAAA,zDAACX,kJAEA,cAAA2B,HAAKd;AAAL,AAAA,IAAAe,aAAAD;QAAA,AAAAf,4CAAAgB,WAAA,IAAA,/DAASpB;UAAT,AAAAI,4CAAAgB,WAAA,IAAA,jEAAWP;AAAX,AACE,wDAAA,jDAACP,8CAAMD,2DAAUQ;;AAEpB,yDAAA,zDAACQ,qIAEA,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAanB;IAAbsB,aAAAJ;QAAA,AAAAnB,4CAAAuB,WAAA,IAAA,/DAAmB3B;UAAnB,AAAAI,4CAAAuB,WAAA,IAAA,jEAAqBC;AAArB,AACE,OAACC,iDAAQ,AAAA,qFAASxB,IAAIuB","names":["re_frame.core.reg_event_db","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","day8.re-frame.debux.common.util/send-form!","result__29532__auto__","day8.re-frame.debux.common.util/send-trace!","e","e29829","_","demo.db/default-db","demo.events/address","js/window","cljs.core.nth","db","cljs.core.assoc","p1__29830#","wscljs.client/create","re-frame.core/dispatch","p__29831","vec__29832","msg","val","cljs.reader.read_string","cljs.core.dissoc","p__29835","vec__29836","cljs.core/rest","p__29839","vec__29840","re_frame.core.reg_event_fx","p__29843","p__29844","map__29845","cljs.core/--destructure-map","cljs.core.get","vec__29846","pos","wscljs.client.send"],"sourcesContent":["(ns demo.events\r\n  (:require\r\n   [re-frame.core :as re-frame]\r\n   [demo.db :as db]\r\n   [day8.re-frame.tracing :refer-macros [fn-traced]]\r\n   [wscljs.client :as ws]\r\n   [wscljs.format :as fmt]\r\n   ))\r\n\r\n(re-frame/reg-event-db\r\n ::initialize-db\r\n (fn-traced [_ _]\r\n   db/default-db))\r\n\r\n(defn address []\r\n  (-> (.. js/window -location -href)\r\n      (.split \"/\")\r\n      (nth 2)))\r\n\r\n(re-frame/reg-event-db\r\n ::connect-websocket\r\n (fn [db _]\r\n   (assoc db :socket (ws/create (str \"ws://\" (address) \"/game\")\r\n                                {:on-message #(re-frame/dispatch [::update-handler %])\r\n                                 :on-open #(re-frame/dispatch [::open-con])}))))\r\n(re-frame/reg-event-db\r\n ::open-con\r\n (fn [db _]\r\n   (assoc db :in-game true)))\r\n\r\n(re-frame/reg-event-db\r\n ::update-handler\r\n (fn [db [_ msg]]\r\n  (let [val (cljs.reader/read-string (.-data msg))]\r\n    (if (:status val)\r\n        (assoc db :gamemarkers val)\r\n        (-> db\r\n           (assoc :result (str val \" WIN!!!\"))\r\n           (dissoc :socket)\r\n           (dissoc :gamemarkers)\r\n           (assoc :in-game false))))))\r\n\r\n(re-frame/reg-event-db\r\n ::update-name\r\n (fn [db [_ val]]\r\n   (assoc db :name (rest (.split (.. js/window -location -href) \"/\")))))\r\n\r\n(re-frame/reg-event-db\r\n ::search-field\r\n (fn [db [_ val]]\r\n   (assoc db :field val)))\r\n\r\n(re-frame/reg-event-fx\r\n ::shoot\r\n (fn [{:keys [db]} [_ pos]]\r\n   (ws/send (:socket db) pos)))\r\n"]}